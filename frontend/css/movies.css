.movie-title{
    font-size: 20px;
    font-family: 'Rancho',cursive;
    color: rgb(70, 16, 30);

}
.bg-gray {
	background-image: url("../images/592465646_640x360.jpg") ;
	background-size:cover;
	background-repeat: no-repeat;
	height:auto;

}
.date-select{
    font-family: 'Patrick',cursive;
    font-size: 22px;
    color: white;
    font-weight: bold;
    float:left;
    margin:auto;
}
@media only screen 
    and (max-width: 760px), (min-device-width: 768px) 
    and (max-device-width: 1024px)  {

		/* Force table to not be like tables anymore */
		table, thead, tbody, th, td, tr {
			display: block;
		}

		/* Hide table headers (but not display: none;, for accessibility) */
		thead tr {
			position: absolute;
			top: -9999px;
			left: -9999px;
		}
        .table td{
            padding-left: 165px;
            padding-top: 1px;
            padding-right: 1px;
            padding-bottom: 1px;
        
        }
    tr {
      margin: 0 0 1rem 0;
    }
      
    
    
		td {
			/* Behave  like a "row" */
			border: none;
			border-bottom: 1px solid #eee;
			position: relative;
			padding-left: 50%;
		}

		td:before {
			/* Now like a table header */
			position: absolute;
			/* Top/left values mimic padding */
			top: 0;
			left: 6px;
			width: 45%;
			padding-right: 10px;
			white-space: nowrap;
		}

		/*
		Label the data
    You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
		*/
		td:nth-of-type(1):before { content: "Title"; }
		
		td:nth-of-type(3):before { content: "Time"; }
		td:nth-of-type(4):before { content: "Room"; }
     

		td:nth-of-type(7):before { content: ""; }
		td:nth-of-type(8):before { content: ""; }
	
	}

.styling{
	
		background-color: rgba(0,0,0,.0001) !important;
   
}